<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<script>
			setTheme();
			function setTheme(themeValue) {
				if (!themeValue) {
					themeValue = localStorage.getItem('theme');
				}
				if (!themeValue) {
					themeValue = 'light';
				}
				if (themeValue === 'light') {
					document.documentElement.setAttribute('data-bs-theme', 'light');
				} else if (themeValue === 'dark') {
					document.documentElement.setAttribute('data-bs-theme', 'dark');
				} else if (themeValue === 'auto') {
					var hour = new Date().getHours();
					if (hour >= 6 && hour < 18) {
						document.documentElement.setAttribute('data-bs-theme', 'light');
					} else {
						document.documentElement.setAttribute('data-bs-theme', 'dark');
					}
				}
			}
			function setThemeIcon(themeValue) {
				if (!themeValue) {
					themeValue = localStorage.getItem('theme');
				}
				if (!themeValue) {
					themeValue = 'light';
				}
				if (themeValue === 'light') {
					document.getElementById('theme-icon').setAttribute('class', 'bi bi-brightness-high-fill');
				} else if (themeValue === 'dark') {
					document.getElementById('theme-icon').setAttribute('class', 'bi bi-moon-stars-fill');
				} else if (themeValue === 'auto') {
					document.getElementById('theme-icon').setAttribute('class', 'bi bi-circle-half');
				}
				var themeItems = document.querySelectorAll('.theme-item');
				if (themeItems.length > 0) {
					themeItems.forEach(elem => {
						if (elem.getAttribute("data-theme") === themeValue) {
							elem.classList.add('active');
						} else {
							elem.classList.remove('active');
						}
					});
				}
			}
			document.addEventListener("DOMContentLoaded", () => {
				setThemeIcon();
				const items = document.querySelectorAll('.theme-item');
				items.forEach(function(elem) {
					elem.addEventListener('click', function(event) {
						var clicked = event.currentTarget;
						var themeValue = clicked.getAttribute('data-theme');
						
						if (themeValue) {
							localStorage.setItem('theme', themeValue);
							setThemeIcon(themeValue);
							setTheme(themeValue);
						}
					});
				});
			});
		</script>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">

		{#- Uncomment this if youâ€™d like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#-
		Plain-text bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. CSS:
			* Add to a per-page bundle using `{% css %}{% endcss %}`
			* Retrieve bundle content using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		2. Or for JavaScript:
			* Add to a per-page bundle using `{% js %}{% endjs %}`
			* Retrieve via `{% getBundle "js" %}` or `{% getBundleFileUrl "js" %}`
		3. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add CSS to the bundle #}
		<style>/* This is an arbitrary CSS string added to the bundle */</style>

		{#- Add the contents of a file to the bundle #}
		{# <style>{% include "css/index.css" %}</style> #}

		{#- Or you can add from node_modules #}
		{# <style>{% include "node_modules/something.css" %}</style> #}

		{#- Render the CSS bundle using inlined CSS (for the fastest site performance in production) #}
		{# <style>{% getBundle "css" %}</style> #}

		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		<link rel="stylesheet" href="/assets/bootstrap-5.3.8/css/bootstrap.min.css">
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">
		<link rel="stylesheet" href="{% getBundleFileUrl "css" %}">

		{#- Add the heading-anchors web component to the JavaScript bundle #}
		<script type="module">{% include "node_modules/@zachleat/heading-anchors/heading-anchors.js" %}</script>
	</head>
	<body>
		<header>
			<nav class="navbar border-bottom border-body navbar-expand-lg">
				<div class="container">
					<a class="navbar-brand" href="#">{{ metadata.title }}</a>
					<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
					</button>
					<div class="collapse navbar-collapse flex-grow-0" id="navbarSupportedContent">
						<ul class="navbar-nav me-auto mb-2 mb-lg-0">
						{%- for entry in collections.all | eleventyNavigation %}
							<li class="nav-item">
								<a class="nav-link {% if entry.url == page.url %}active"{% endif %}" href="{{ entry.url }}">{{ entry.title }}</a>
							</li>
						{%- endfor %}
						<li class="nav-item">
							<a class="nav-link" href="https://github.com/PaulYu1988" target="_blank"><i class="bi bi-github"></i></a>
						</li>
						<li class="nav-item dropdown">
							<a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
								<i id="theme-icon" class="bi bi-brightness-high-fill"></i>
							</a>
							<ul class="dropdown-menu dropdown-menu-end">
								<li><a class="dropdown-item theme-item" data-theme="light" href="#"><i class="bi bi-brightness-high-fill"></i> Light</a></li>
								<li><a class="dropdown-item theme-item" data-theme="dark" href="#"><i class="bi bi-moon-stars-fill"></i> Dark</a></li>
								<li><a class="dropdown-item theme-item" data-theme="auto" href="#"><i class="bi bi-circle-half"></i> Auto</a></li>
							</ul>
						</li>
					</ul>
					</div>
				</div>
			</nav>
		</header>
		<div class="container">
			<main id="main" class="mt-4">
				{{ content | safe }}
			</main>
		</div>
		<footer>
			<div class="container">
				<p>
					<em>Built with <a href="https://www.11ty.dev/">{{ eleventy.generator }}</a></em>
				</p>
			</div>
		</footer>

		<!-- This page `{{ page.url }}` was built on {% currentBuildDate %} -->
		<script type="module" src="/assets/bootstrap-5.3.8/js/bootstrap.bundle.min.js"></script>
		<script type="module" src="{% getBundleFileUrl "js" %}"></script>
	</body>
</html>
